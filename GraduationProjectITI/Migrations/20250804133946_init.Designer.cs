// <auto-generated />
using GraduationProjectITI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraduationProjectITI.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20250804133946_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraduationProjectITI.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Electronic devices",
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Home and kitchen appliances",
                            Name = "Home & Kitchen"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Books and educational materials",
                            Name = "Books"
                        });
                });

            modelBuilder.Entity("GraduationProjectITI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Laptop",
                            ImagePath = "/images/laptop.jpg",
                            Price = 1200m,
                            Quantity = 10
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "Tablet",
                            ImagePath = "/images/tablet.jpg",
                            Price = 800m,
                            Quantity = 15
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            Description = "Coffee Maker",
                            ImagePath = "/images/coffee_maker.jpg",
                            Price = 50m,
                            Quantity = 25
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 3,
                            Description = "Book: C# Basics",
                            ImagePath = "/images/book1.jpg",
                            Price = 30m,
                            Quantity = 100
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 3,
                            Description = "Book: ASP.NET Core",
                            ImagePath = "/images/book2.jpg",
                            Price = 35m,
                            Quantity = 80
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 2,
                            Description = "Blender",
                            ImagePath = "/images/blender.jpg",
                            Price = 100m,
                            Quantity = 20
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 1,
                            Description = "Smartphone",
                            ImagePath = "/images/phone.jpg",
                            Price = 400m,
                            Quantity = 12
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 2,
                            Description = "Toaster",
                            ImagePath = "/images/toaster.jpg",
                            Price = 60m,
                            Quantity = 18
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 3,
                            Description = "Book: EF Core Guide",
                            ImagePath = "/images/book3.jpg",
                            Price = 25m,
                            Quantity = 70
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 3,
                            Description = "Book: LINQ in Action",
                            ImagePath = "/images/book4.jpg",
                            Price = 20m,
                            Quantity = 60
                        });
                });

            modelBuilder.Entity("GraduationProjectITI.Models.Product", b =>
                {
                    b.HasOne("GraduationProjectITI.Models.Category", "category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("GraduationProjectITI.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
